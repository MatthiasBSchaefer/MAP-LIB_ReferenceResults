[ResultCreationLog]
modelName="Modelica.Electrical.Analog.Examples.SimpleTriacCircuit"

// Test info
generationTool="Dymola Version 2020x (64-bit), 2019-10-10"
generationDateAndTime="2020-03-16T11:11:14Z"
gitURL="https://github.com/modelica/ModelicaStandardLibrary.git"
gitRevision=bec0189aa
gitStatus=
testPC="LAPTOP-RUH9UABA"
testOS="Microsoft Windows [Version 10.0.18362.720]"
testUser="tbeu"
testDescription="Reg test MSL v3.2.3+build.4"

// Experiment settings (standardized annotation)
StartTime=0
StopTime=0.001 // from model
Interval=2.5e-07 // used annotation from model, multiplied by 0.5
Tolerance=1e-12 // used annotation from model, because attempt with tolerance of 1e-13

// Experiment settings (tool specific)
// The following lines can be used as mos-script in Dymola
Advanced.PedanticModelica := false;
SetDymolaCompiler("vs", {"MSVCDir=c:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Auxiliary/Build"});
Evaluate := false;
OutputCPUtime := false;
translateModel("Modelica.Electrical.Analog.Examples.SimpleTriacCircuit");
Advanced.StoreProtectedVariables := true;
Advanced.EfficientMinorEvents := false;
Advanced.PlaceDymolaSourceFirst := 2;
experimentSetupOutput(
  textual=false,
  doublePrecision=true,
  states=true,
  derivatives=true,
  inputs=true,
  outputs=true,
  auxiliaries=true,
  equidistant=true,
  events=true,
  debug=false);
simulateModel(
  problem="Modelica.Electrical.Analog.Examples.SimpleTriacCircuit",
  startTime=0,
  stopTime=0.001,
  outputInterval=2.5e-07,
  method="Dassl",
  tolerance=1e-12,
  resultFile="SimpleTriacCircuit");
