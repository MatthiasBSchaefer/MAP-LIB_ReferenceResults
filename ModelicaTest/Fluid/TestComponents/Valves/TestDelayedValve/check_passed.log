 = true
TestID: 2018-12-16_104542
This is check 51 of 91
Check of ModelicaTest.Fluid.TestComponents.Valves.TestDelayedValve:
The model has the same number of unknowns and equations: 291
The model could not be deduced to be symbolically well-posed.
The model has
  287+(if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  LowPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  HighPass then valveDelayed.filter.order else 2*valveDelayed.filter.order)+(if   valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.BandPass   or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveDelayed.filter.order else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveDelayed.filter.order/2)))+(if valveDelayed.filter.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveDelayed.filter.order   else mod(valveDelayed.filter.order, 2)))
scalar unknowns and
  287+(if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then valveDelayed.filter.order else mod(valveDelayed.filter.order,   2)))+2*(if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveDelayed.filter.order else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveDelayed.filter.order/2)))+(if valveDelayed.filter.filterType ==   Modelica.Blocks.Types.FilterType.LowPass then (if valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveDelayed.filter.order   else mod(valveDelayed.filter.order, 2)))+(if valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveDelayed.filter.order   else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveDelayed.filter.order/2))) else (if   valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.HighPass   then (if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then valveDelayed.filter.order else mod(valveDelayed.filter.order,   2)))+(if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveDelayed.filter.order else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveDelayed.filter.order/2))) else (if valveDelayed.filter.filterType ==   Modelica.Blocks.Types.FilterType.BandPass then (if valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveDelayed.filter.order   else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveDelayed.filter.order/2))) else (if   valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.BandStop   then (if valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveDelayed.filter.order else (if valveDelayed.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveDelayed.filter.order/2))) else 1+(if valveDelayed.filter.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or valveDelayed.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveDelayed.filter.order   else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveDelayed.filter.order/2)))+(if   valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.BandPass   or valveDelayed.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveDelayed.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then valveDelayed.filter.order else mod(valveDelayed.filter.order,   2)))))))
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  291
Check of ModelicaTest.Fluid.TestComponents.Valves.TestDelayedValve successful.
Save check log