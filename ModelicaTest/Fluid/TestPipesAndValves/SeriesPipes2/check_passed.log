 = true
TestID: 2018-12-16_104542
This is check 84 of 91
Check of ModelicaTest.Fluid.TestPipesAndValves.SeriesPipes2:
The model has the same number of unknowns and equations: 322
The model could not be deduced to be symbolically well-posed.
The model has
  318+(if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  LowPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  HighPass then valveIncompressible1.filter.order else 2*valveIncompressible1.filter.order)  +(if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveIncompressible1.filter.order else (if valveIncompressible1.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveIncompressible1.filter.order/2)))+(if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if valveIncompressible1.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveIncompressible1.filter.order   else mod(valveIncompressible1.filter.order, 2)))
scalar unknowns and
  318+(if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveIncompressible1.filter.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveIncompressible1.filter.order   else mod(valveIncompressible1.filter.order, 2)))+2*(if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveIncompressible1.filter.order   else (if valveIncompressible1.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveIncompressible1.filter.order/2)))+(  if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  LowPass then (if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveIncompressible1.filter.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveIncompressible1.filter.order   else mod(valveIncompressible1.filter.order, 2)))+(if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveIncompressible1.filter.order   else (if valveIncompressible1.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveIncompressible1.filter.order/2)))   else (if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  HighPass then (if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then 0 else (if valveIncompressible1.filter.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveIncompressible1.filter.order   else mod(valveIncompressible1.filter.order, 2)))+(if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveIncompressible1.filter.order   else (if valveIncompressible1.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveIncompressible1.filter.order/2)))   else (if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass then (if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveIncompressible1.filter.order else (if valveIncompressible1.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveIncompressible1.filter.order/2))) else (if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then (if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then valveIncompressible1.filter.order   else (if valveIncompressible1.filter.analogFilter == Modelica.Blocks.Types.AnalogFilter.  CriticalDamping then 0 else integer(valveIncompressible1.filter.order/2)))   else 1+(if valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandPass or valveIncompressible1.filter.filterType == Modelica.Blocks.Types.FilterType.  BandStop then valveIncompressible1.filter.order else (if valveIncompressible1.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  valveIncompressible1.filter.order/2)))+(if valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandPass or valveIncompressible1.filter.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if valveIncompressible1.filter.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then valveIncompressible1.filter.order   else mod(valveIncompressible1.filter.order, 2)))))))
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  322
Check of ModelicaTest.Fluid.TestPipesAndValves.SeriesPipes2 successful.
Save check log