 = true
TestID: 2018-12-16_102510
This is check 16 of 17
Check of ModelicaTest.Blocks.FilterTests.AllOptions:
The model has the same number of unknowns and equations: 4533
The model could not be deduced to be symbolically well-posed.
The model has
  825+(if normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.CriticalDamping_a.order   else 2*normalized.steadyState.lowPass.CriticalDamping_a.order)+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_a.order   else mod(normalized.steadyState.lowPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.CriticalDamping_b.order   else 2*normalized.steadyState.lowPass.CriticalDamping_b.order)+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_b.order   else mod(normalized.steadyState.lowPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.Bessel_a.order   else 2*normalized.steadyState.lowPass.Bessel_a.order)+(if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2)))+(if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_a.order   else mod(normalized.steadyState.lowPass.Bessel_a.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.Bessel_b.order   else 2*normalized.steadyState.lowPass.Bessel_b.order)+(if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2)))+(if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_b.order   else mod(normalized.steadyState.lowPass.Bessel_b.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.Butterworth_a.order   else 2*normalized.steadyState.lowPass.Butterworth_a.order)+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2)))+(if normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_a.order   else mod(normalized.steadyState.lowPass.Butterworth_a.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.Butterworth_b.order   else 2*normalized.steadyState.lowPass.Butterworth_b.order)+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2)))+(if normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_b.order   else mod(normalized.steadyState.lowPass.Butterworth_b.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.ChebyshevI_a.order   else 2*normalized.steadyState.lowPass.ChebyshevI_a.order)+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_a.order   else mod(normalized.steadyState.lowPass.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.lowPass.ChebyshevI_b.order   else 2*normalized.steadyState.lowPass.ChebyshevI_b.order)+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_b.order   else mod(normalized.steadyState.lowPass.ChebyshevI_b.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.CriticalDamping_a.order   else 2*normalized.steadyState.highPass.CriticalDamping_a.order)+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_a.order   else mod(normalized.steadyState.highPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.CriticalDamping_b.order   else 2*normalized.steadyState.highPass.CriticalDamping_b.order)+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_b.order   else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_b.order   else mod(normalized.steadyState.highPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.highPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.Bessel_a.order   else 2*normalized.steadyState.highPass.Bessel_a.order)+(if normalized.steadyState.highPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.Bessel_a.order   else (if normalized.steadyState.highPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.Bessel_a.order/2)))+(if normalized.steadyState.highPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.Bessel_a.order   else mod(normalized.steadyState.highPass.Bessel_a.order, 2)))+(if   normalized.steadyState.highPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.Bessel_b.order   else 2*normalized.steadyState.highPass.Bessel_b.order)+(if normalized.steadyState.highPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.Bessel_b.order   else (if normalized.steadyState.highPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.Bessel_b.order/2)))+(if normalized.steadyState.highPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.Bessel_b.order   else mod(normalized.steadyState.highPass.Bessel_b.order, 2)))+(if   normalized.steadyState.highPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.Butterworth_a.order   else 2*normalized.steadyState.highPass.Butterworth_a.order)+(if   normalized.steadyState.highPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.highPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.Butterworth_a.order   else (if normalized.steadyState.highPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.Butterworth_a.order/2)))+(if normalized.steadyState.highPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.Butterworth_a.order   else mod(normalized.steadyState.highPass.Butterworth_a.order, 2)))+(if   normalized.steadyState.highPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.Butterworth_b.order   else 2*normalized.steadyState.highPass.Butterworth_b.order)+(if   normalized.steadyState.highPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.highPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.Butterworth_b.order   else (if normalized.steadyState.highPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.Butterworth_b.order/2)))+(if normalized.steadyState.highPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.Butterworth_b.order   else mod(normalized.steadyState.highPass.Butterworth_b.order, 2)))+(if   normalized.steadyState.highPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.ChebyshevI_a.order   else 2*normalized.steadyState.highPass.ChebyshevI_a.order)+(if   normalized.steadyState.highPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.highPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.ChebyshevI_a.order   else (if normalized.steadyState.highPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.ChebyshevI_a.order/2)))+(if normalized.steadyState.highPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.ChebyshevI_a.order   else mod(normalized.steadyState.highPass.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.highPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.highPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.highPass.ChebyshevI_b.order   else 2*normalized.steadyState.highPass.ChebyshevI_b.order)+(if   normalized.steadyState.highPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.highPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.ChebyshevI_b.order   else (if normalized.steadyState.highPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.ChebyshevI_b.order/2)))+(if normalized.steadyState.highPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.ChebyshevI_b.order   else mod(normalized.steadyState.highPass.ChebyshevI_b.order, 2)))+(if   normalized.steadyState.bandPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.bandPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.CriticalDamping_a.order   else 2*normalized.steadyState.bandPass.CriticalDamping_a.order)+(if   normalized.steadyState.bandPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.CriticalDamping_a.order   else (if normalized.steadyState.bandPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.bandPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.CriticalDamping_a.order   else mod(normalized.steadyState.bandPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.bandPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.bandPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.CriticalDamping_b.order   else 2*normalized.steadyState.bandPass.CriticalDamping_b.order)+(if   normalized.steadyState.bandPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.CriticalDamping_b.order   else (if normalized.steadyState.bandPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.bandPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.CriticalDamping_b.order   else mod(normalized.steadyState.bandPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.bandPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.Bessel_a.order   else 2*normalized.steadyState.bandPass.Bessel_a.order)+(if normalized.steadyState.bandPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.Bessel_a.order   else (if normalized.steadyState.bandPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.Bessel_a.order/2)))+(if normalized.steadyState.bandPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.Bessel_a.order   else mod(normalized.steadyState.bandPass.Bessel_a.order, 2)))+(if   normalized.steadyState.bandPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.Bessel_b.order   else 2*normalized.steadyState.bandPass.Bessel_b.order)+(if normalized.steadyState.bandPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.Bessel_b.order   else (if normalized.steadyState.bandPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.Bessel_b.order/2)))+(if normalized.steadyState.bandPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.Bessel_b.order   else mod(normalized.steadyState.bandPass.Bessel_b.order, 2)))+(if   normalized.steadyState.bandPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.Butterworth_a.order   else 2*normalized.steadyState.bandPass.Butterworth_a.order)+(if   normalized.steadyState.bandPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.Butterworth_a.order   else (if normalized.steadyState.bandPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.Butterworth_a.order/2)))+(if normalized.steadyState.bandPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.Butterworth_a.order   else mod(normalized.steadyState.bandPass.Butterworth_a.order, 2)))+(if   normalized.steadyState.bandPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.Butterworth_b.order   else 2*normalized.steadyState.bandPass.Butterworth_b.order)+(if   normalized.steadyState.bandPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.Butterworth_b.order   else (if normalized.steadyState.bandPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.Butterworth_b.order/2)))+(if normalized.steadyState.bandPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.Butterworth_b.order   else mod(normalized.steadyState.bandPass.Butterworth_b.order, 2)))+(if   normalized.steadyState.bandPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.ChebyshevI_a.order   else 2*normalized.steadyState.bandPass.ChebyshevI_a.order)+(if   normalized.steadyState.bandPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.ChebyshevI_a.order   else (if normalized.steadyState.bandPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.ChebyshevI_a.order/2)))+(if normalized.steadyState.bandPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.ChebyshevI_a.order   else mod(normalized.steadyState.bandPass.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.bandPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandPass.ChebyshevI_b.order   else 2*normalized.steadyState.bandPass.ChebyshevI_b.order)+(if   normalized.steadyState.bandPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandPass.ChebyshevI_b.order   else (if normalized.steadyState.bandPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandPass.ChebyshevI_b.order/2)))+(if normalized.steadyState.bandPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandPass.ChebyshevI_b.order   else mod(normalized.steadyState.bandPass.ChebyshevI_b.order, 2)))+(if   normalized.steadyState.bandStop.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.bandStop.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.CriticalDamping_a.order   else 2*normalized.steadyState.bandStop.CriticalDamping_a.order)+(if   normalized.steadyState.bandStop.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.CriticalDamping_a.order   else (if normalized.steadyState.bandStop.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.CriticalDamping_a.order/2)))+(if   normalized.steadyState.bandStop.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.CriticalDamping_a.order   else mod(normalized.steadyState.bandStop.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.bandStop.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.steadyState.bandStop.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.CriticalDamping_b.order   else 2*normalized.steadyState.bandStop.CriticalDamping_b.order)+(if   normalized.steadyState.bandStop.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.CriticalDamping_b.order   else (if normalized.steadyState.bandStop.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.CriticalDamping_b.order/2)))+(if   normalized.steadyState.bandStop.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.CriticalDamping_b.order   else mod(normalized.steadyState.bandStop.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.bandStop.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.Bessel_a.order   else 2*normalized.steadyState.bandStop.Bessel_a.order)+(if normalized.steadyState.bandStop.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.Bessel_a.order   else (if normalized.steadyState.bandStop.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.Bessel_a.order/2)))+(if normalized.steadyState.bandStop.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.Bessel_a.order   else mod(normalized.steadyState.bandStop.Bessel_a.order, 2)))+(if   normalized.steadyState.bandStop.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.Bessel_b.order   else 2*normalized.steadyState.bandStop.Bessel_b.order)+(if normalized.steadyState.bandStop.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.Bessel_b.order   else (if normalized.steadyState.bandStop.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.Bessel_b.order/2)))+(if normalized.steadyState.bandStop.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.Bessel_b.order   else mod(normalized.steadyState.bandStop.Bessel_b.order, 2)))+(if   normalized.steadyState.bandStop.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.Butterworth_a.order   else 2*normalized.steadyState.bandStop.Butterworth_a.order)+(if   normalized.steadyState.bandStop.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandStop.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.Butterworth_a.order   else (if normalized.steadyState.bandStop.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.Butterworth_a.order/2)))+(if normalized.steadyState.bandStop.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.Butterworth_a.order   else mod(normalized.steadyState.bandStop.Butterworth_a.order, 2)))+(if   normalized.steadyState.bandStop.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.Butterworth_b.order   else 2*normalized.steadyState.bandStop.Butterworth_b.order)+(if   normalized.steadyState.bandStop.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandStop.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.Butterworth_b.order   else (if normalized.steadyState.bandStop.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.Butterworth_b.order/2)))+(if normalized.steadyState.bandStop.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.Butterworth_b.order   else mod(normalized.steadyState.bandStop.Butterworth_b.order, 2)))+(if   normalized.steadyState.bandStop.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.ChebyshevI_a.order   else 2*normalized.steadyState.bandStop.ChebyshevI_a.order)+(if   normalized.steadyState.bandStop.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandStop.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.ChebyshevI_a.order   else (if normalized.steadyState.bandStop.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.ChebyshevI_a.order/2)))+(if normalized.steadyState.bandStop.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.ChebyshevI_a.order   else mod(normalized.steadyState.bandStop.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.bandStop.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.steadyState.bandStop.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.steadyState.bandStop.ChebyshevI_b.order   else 2*normalized.steadyState.bandStop.ChebyshevI_b.order)+(if   normalized.steadyState.bandStop.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.bandStop.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.bandStop.ChebyshevI_b.order   else (if normalized.steadyState.bandStop.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.bandStop.ChebyshevI_b.order/2)))+(if normalized.steadyState.bandStop.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.bandStop.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.bandStop.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.bandStop.ChebyshevI_b.order   else mod(normalized.steadyState.bandStop.ChebyshevI_b.order, 2)))+(if   normalized.initialState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.initialState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.CriticalDamping_a.order   else 2*normalized.initialState.lowPass.CriticalDamping_a.order)+(if   normalized.initialState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.CriticalDamping_a.order   else (if normalized.initialState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.CriticalDamping_a.order/2)))+(if   normalized.initialState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.CriticalDamping_a.order   else mod(normalized.initialState.lowPass.CriticalDamping_a.order, 2)))+(if   normalized.initialState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass or normalized.initialState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.CriticalDamping_b.order   else 2*normalized.initialState.lowPass.CriticalDamping_b.order)+(if   normalized.initialState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.CriticalDamping_b.order   else (if normalized.initialState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.CriticalDamping_b.order/2)))+(if   normalized.initialState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.CriticalDamping_b.order   else mod(normalized.initialState.lowPass.CriticalDamping_b.order, 2)))+(if   normalized.initialState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.Bessel_a.order   else 2*normalized.initialState.lowPass.Bessel_a.order)+(if normalized.initialState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.Bessel_a.order   else (if normalized.initialState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.Bessel_a.order/2)))+(if normalized.initialState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.Bessel_a.order   else mod(normalized.initialState.lowPass.Bessel_a.order, 2)))+(if   normalized.initialState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.Bessel_b.order   else 2*normalized.initialState.lowPass.Bessel_b.order)+(if normalized.initialState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.Bessel_b.order   else (if normalized.initialState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.Bessel_b.order/2)))+(if normalized.initialState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.Bessel_b.order   else mod(normalized.initialState.lowPass.Bessel_b.order, 2)))+(if   normalized.initialState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.Butterworth_a.order   else 2*normalized.initialState.lowPass.Butterworth_a.order)+(if   normalized.initialState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.initialState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.Butterworth_a.order   else (if normalized.initialState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.Butterworth_a.order/2)))+(if normalized.initialState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.Butterworth_a.order   else mod(normalized.initialState.lowPass.Butterworth_a.order, 2)))+(if   normalized.initialState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.Butterworth_b.order   else 2*normalized.initialState.lowPass.Butterworth_b.order)+(if   normalized.initialState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.initialState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.Butterworth_b.order   else (if normalized.initialState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.Butterworth_b.order/2)))+(if normalized.initialState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.Butterworth_b.order   else mod(normalized.initialState.lowPass.Butterworth_b.order, 2)))+(if   normalized.initialState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.ChebyshevI_a.order   else 2*normalized.initialState.lowPass.ChebyshevI_a.order)+(if   normalized.initialState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.initialState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.initialState.lowPass.ChebyshevI_a.order   else (if normalized.initialState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.initialState.lowPass.ChebyshevI_a.order/2)))+(if normalized.initialState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.initialState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.initialState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.initialState.lowPass.ChebyshevI_a.order   else mod(normalized.initialState.lowPass.ChebyshevI_a.order, 2)))+(if   normalized.initialState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  LowPass or normalized.initialState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then normalized.initialState.lowPass.ChebyshevI_b.order
scalar unknowns and
  825+(if normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_a.order   else mod(normalized.steadyState.lowPass.CriticalDamping_a.order, 2)))+2*(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_a.order   else mod(normalized.steadyState.lowPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_a.order   else mod(normalized.steadyState.lowPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass then (if normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then (if normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2))) else 1+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_a.order   else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_a.order   else mod(normalized.steadyState.lowPass.CriticalDamping_a.order, 2)))))))+(  if normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_b.order   else mod(normalized.steadyState.lowPass.CriticalDamping_b.order, 2)))+2*(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_b.order   else mod(normalized.steadyState.lowPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_b.order   else mod(normalized.steadyState.lowPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass then (if normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2))) else (if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then (if normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2))) else 1+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.CriticalDamping_b.order   else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.lowPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.CriticalDamping_b.order   else mod(normalized.steadyState.lowPass.CriticalDamping_b.order, 2)))))))+(  if normalized.steadyState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_a.order   else mod(normalized.steadyState.lowPass.Bessel_a.order, 2)))+2*(if   normalized.steadyState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2)))+(if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_a.order   else mod(normalized.steadyState.lowPass.Bessel_a.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2))) else (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_a.order   else mod(normalized.steadyState.lowPass.Bessel_a.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2))) else (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass then (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2))) else (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then (if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2))) else 1+(if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_a.order   else (if normalized.steadyState.lowPass.Bessel_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_a.order/2)))+(if normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_a.order   else mod(normalized.steadyState.lowPass.Bessel_a.order, 2)))))))+(if   normalized.steadyState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_b.order   else mod(normalized.steadyState.lowPass.Bessel_b.order, 2)))+2*(if   normalized.steadyState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2)))+(if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_b.order   else mod(normalized.steadyState.lowPass.Bessel_b.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2))) else (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_b.order   else mod(normalized.steadyState.lowPass.Bessel_b.order, 2)))+(if   normalized.steadyState.lowPass.Bessel_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Bessel_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2))) else (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass then (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2))) else (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then (if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2))) else 1+(if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Bessel_b.order   else (if normalized.steadyState.lowPass.Bessel_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Bessel_b.order/2)))+(if normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Bessel_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Bessel_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Bessel_b.order   else mod(normalized.steadyState.lowPass.Bessel_b.order, 2)))))))+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_a.order   else mod(normalized.steadyState.lowPass.Butterworth_a.order, 2)))+2*(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2)))+(if normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_a.order   else mod(normalized.steadyState.lowPass.Butterworth_a.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  HighPass then (if normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_a.order   else mod(normalized.steadyState.lowPass.Butterworth_a.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass then (if normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandStop then (if normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2))) else 1+(if   normalized.steadyState.lowPass.Butterworth_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_a.order   else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_a.order/2)))+(if normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_a.order   else mod(normalized.steadyState.lowPass.Butterworth_a.order, 2)))))))+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_b.order   else mod(normalized.steadyState.lowPass.Butterworth_b.order, 2)))+2*(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2)))+(if normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_b.order   else mod(normalized.steadyState.lowPass.Butterworth_b.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  HighPass then (if normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_b.order   else mod(normalized.steadyState.lowPass.Butterworth_b.order, 2)))+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass then (if normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2))) else (if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandStop then (if normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2))) else 1+(if   normalized.steadyState.lowPass.Butterworth_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.Butterworth_b.order   else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.Butterworth_b.order/2)))+(if normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.Butterworth_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.Butterworth_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.Butterworth_b.order   else mod(normalized.steadyState.lowPass.Butterworth_b.order, 2)))))))+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_a.order   else mod(normalized.steadyState.lowPass.ChebyshevI_a.order, 2)))+2*(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_a.order   else mod(normalized.steadyState.lowPass.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  HighPass then (if normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_a.order   else mod(normalized.steadyState.lowPass.ChebyshevI_a.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass then (if normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandStop then (if normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2))) else 1+(if   normalized.steadyState.lowPass.ChebyshevI_a.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_a.order   else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_a.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_a.order   else mod(normalized.steadyState.lowPass.ChebyshevI_a.order, 2)))))))+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_b.order   else mod(normalized.steadyState.lowPass.ChebyshevI_b.order, 2)))+2*(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_b.order   else mod(normalized.steadyState.lowPass.ChebyshevI_b.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  HighPass then (if normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_b.order   else mod(normalized.steadyState.lowPass.ChebyshevI_b.order, 2)))+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass then (if normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2))) else (if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandStop then (if normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2))) else 1+(if   normalized.steadyState.lowPass.ChebyshevI_b.filterType == Modelica.Blocks.Types.FilterType.  BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.lowPass.ChebyshevI_b.order   else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.lowPass.ChebyshevI_b.order/2)))+(if normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.lowPass.ChebyshevI_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.lowPass.ChebyshevI_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.lowPass.ChebyshevI_b.order   else mod(normalized.steadyState.lowPass.ChebyshevI_b.order, 2)))))))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_a.order   else mod(normalized.steadyState.highPass.CriticalDamping_a.order, 2)))+2*(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_a.order   else mod(normalized.steadyState.highPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_a.order   else mod(normalized.steadyState.highPass.CriticalDamping_a.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass then (if normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2))) else (if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandStop then (if normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2))) else 1+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_a.order   else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_a.order/2)))+(if   normalized.steadyState.highPass.CriticalDamping_a.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_a.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_a.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_a.order   else mod(normalized.steadyState.highPass.CriticalDamping_a.order, 2)))))))+(  if normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_b.order   else mod(normalized.steadyState.highPass.CriticalDamping_b.order, 2)))+2*(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_b.order   else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_b.order/2)))+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.LowPass then (if normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_b.order   else mod(normalized.steadyState.highPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_b.order   else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_b.order/2))) else (if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.HighPass then (if normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then 0 else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter   == Modelica.Blocks.Types.AnalogFilter.CriticalDamping then normalized.steadyState.highPass.CriticalDamping_b.order   else mod(normalized.steadyState.highPass.CriticalDamping_b.order, 2)))+(if   normalized.steadyState.highPass.CriticalDamping_b.filterType ==   Modelica.Blocks.Types.FilterType.BandPass or normalized.steadyState.highPass.CriticalDamping_b.filterType   == Modelica.Blocks.Types.FilterType.BandStop then normalized.steadyState.highPass.CriticalDamping_b.order   else (if normalized.steadyState.highPass.CriticalDamping_b.analogFilter ==   Modelica.Blocks.Types.AnalogFilter.CriticalDamping then 0 else integer(  normalized.steadyState.highPass.CriticalDamping_b.order/2))) else (if   
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  4533
Check of ModelicaTest.Blocks.FilterTests.AllOptions successful.
Save check log